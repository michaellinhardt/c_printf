==6592== Memcheck, a memory error detector
==6592== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==6592== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==6592== Command: ./printf
==6592== 
                 pf_parse      0     lettre      %

       pf_parse_specifier      0      verif      %
          pf_parse_modulo      0     lettre      %

       pf_parse_specifier      1      incre      p

       pf_parse_specifier      1      verif      p

             pf_build_ptr      1         NA

            pf_build_itoa      1     lettre      p

       fin de specifier 2      1     lettre      p
                   join 2      1

       pf_parse_specifier      1        end      p
                 pf_parse      2     lettre      !
                 pf_parse      3     lettre      

                   join 1      4

0x108006bb8!
0x108006bb8!

0x100a7d500
0x8006bb8
 0011
==6592== 
==6592== HEAP SUMMARY:
==6592==     in use at exit: 26,131 bytes in 186 blocks
==6592==   total heap usage: 280 allocs, 94 frees, 32,470 bytes allocated
==6592== 
==6592== 2,064 bytes in 1 blocks are possibly lost in loss record 58 of 64
==6592==    at 0x10000E17C: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.11.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==6592==    by 0x1004F9EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004ED182: protocols() (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004ED093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004EAC13: gc_init (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004F224E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004FF132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004ED83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004ED300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004ED2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004ED2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==6592==    by 0x1004ED2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==6592== 
==6592== LEAK SUMMARY:
==6592==    definitely lost: 0 bytes in 0 blocks
==6592==    indirectly lost: 0 bytes in 0 blocks
==6592==      possibly lost: 2,064 bytes in 1 blocks
==6592==    still reachable: 0 bytes in 0 blocks
==6592==         suppressed: 24,067 bytes in 185 blocks
==6592== 
==6592== For counts of detected and suppressed errors, rerun with: -v
==6592== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 18 from 18)
