==47838== Memcheck, a memory error detector
==47838== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==47838== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==47838== Command: ./a.out
==47838== 
                 pf_parse      0     lettre      %
          pf_parse_modulo      0     lettre      %

       pf_parse_specifier      1      incre      d
-42

             pf_build_int      1      value    -42

            pf_build_itoa      1     lettre      d

       fin de specifier 2      1     lettre      d
                   join 2      1

       pf_parse_specifier      1        end      d
-42 - ret: 3 
-42 - ret: 3 

                 pf_parse      0     lettre      %
          pf_parse_modulo      0     lettre      %

       pf_parse_specifier      1      incre      X

           pf_build_xint2      1      value 4294967254

            pf_build_itoa      1     lettre      X

       fin de specifier 2      1     lettre      X
                   join 2      1

       pf_parse_specifier      1        end      X
FFFFFFD6
FFFFFFD6

==47838== 
==47838== HEAP SUMMARY:
==47838==     in use at exit: 26,107 bytes in 185 blocks
==47838==   total heap usage: 280 allocs, 95 frees, 32,423 bytes allocated
==47838== 
==47838== 2,064 bytes in 1 blocks are possibly lost in loss record 57 of 63
==47838==    at 0x10000D17C: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.11.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==47838==    by 0x1004F8EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004EC182: protocols() (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004EC093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004E9C13: gc_init (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004F124E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004FE132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004EC83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004EC300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004EC2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004EC2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==47838==    by 0x1004EC2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==47838== 
==47838== LEAK SUMMARY:
==47838==    definitely lost: 0 bytes in 0 blocks
==47838==    indirectly lost: 0 bytes in 0 blocks
==47838==      possibly lost: 2,064 bytes in 1 blocks
==47838==    still reachable: 0 bytes in 0 blocks
==47838==         suppressed: 24,043 bytes in 184 blocks
==47838== 
==47838== For counts of detected and suppressed errors, rerun with: -v
==47838== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 17 from 17)
