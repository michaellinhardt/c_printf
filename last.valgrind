==17827== Memcheck, a memory error detector
==17827== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17827== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==17827== Command: ./printf
==17827== 
                 pf_parse      0     lettre      %

       pf_parse_specifier      0      verif      %
          pf_parse_modulo      0     lettre      %

       pf_parse_specifier      1      incre      .

       pf_parse_specifier      1      verif      .
         pf_parse_preci 2      2     lettre      s

       pf_parse_specifier      2      incre      s

       pf_parse_specifier      2      verif      s

          pf_build_string      2     lettre      s

       fin de specifier 2      2     lettre      s
                   join 2      2

       pf_parse_specifier      2        end      s
                 pf_parse      3     lettre      !
                 pf_parse      4     lettre      

                   join 1      5

!
!
==17827== 
==17827== HEAP SUMMARY:
==17827==     in use at exit: 26,107 bytes in 185 blocks
==17827==   total heap usage: 279 allocs, 94 frees, 32,408 bytes allocated
==17827== 
==17827== 2,064 bytes in 1 blocks are possibly lost in loss record 57 of 63
==17827==    at 0x10000D17C: malloc_zone_malloc (in /usr/local/Cellar/valgrind/3.11.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==17827==    by 0x1004F8EFD: _objc_copyClassNamesForImage (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004EC182: protocols() (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004EC093: readClass(objc_class*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004E9C13: gc_init (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004F124E: objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004FE132: layout_string_create (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004EC83C: realizeClass(objc_class*) (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004EC300: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004EC2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004EC2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==17827==    by 0x1004EC2E9: copySwiftV1MangledName(char const*, bool) (in /usr/lib/libobjc.A.dylib)
==17827== 
==17827== LEAK SUMMARY:
==17827==    definitely lost: 0 bytes in 0 blocks
==17827==    indirectly lost: 0 bytes in 0 blocks
==17827==      possibly lost: 2,064 bytes in 1 blocks
==17827==    still reachable: 0 bytes in 0 blocks
==17827==         suppressed: 24,043 bytes in 184 blocks
==17827== 
==17827== For counts of detected and suppressed errors, rerun with: -v
==17827== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 17 from 17)
